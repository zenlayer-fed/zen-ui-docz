(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{yAjQ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return j}));n("5hJT"),n("W1QL"),n("K/PF"),n("75LO"),n("PJhk"),n("DbwS"),n("t91x"),n("yhOr");var a=n("znpr"),l=(n("obia"),n("y+Ly")),b=(n("wl/M"),n("DrYe")),r=(n("WlIq"),n("wftt")),i=n("mXGw"),c=n("/FXl"),d=n("TjRS"),u=n("ZFoC");n("aD51");function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"components/text/index.mdx"}});var o={_frontmatter:p},O=d.a;function j(e){var t,n=e.components,j=function(e,t){if(null==e)return{};var n,a,l={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,["components"]);return Object(c.b)(O,m({},o,j,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"text-文本样式"},"Text 文本样式"),Object(c.b)("h2",{id:"何时使用"},"何时使用"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"当需要一系列基于文本的基础操作时，如拷贝/省略/可编辑。（目前只做了可编辑）")),Object(c.b)("h2",{id:"基本用法"},"基本用法"),Object(c.b)(u.c,{__position:0,__code:'() => {\n  const [value, setValue] = React.useState(3)\n  const [edit, setEdit] = React.useState(true)\n  return (\n    <Descriptions>\n      <Descriptions.Item label="String类型">\n        <Text editable={{}}>字符串</Text>\n      </Descriptions.Item>\n      <Descriptions.Item label="Number类型">\n        <Text\n          editable={{\n            type: \'number\',\n          }}\n        >\n          122\n        </Text>\n      </Descriptions.Item>\n      <Descriptions.Item label="修改Edit图标">\n        <Text\n          editable={{\n            type: \'number\',\n            icon: <span>Change</span>,\n          }}\n        >\n          122\n        </Text>\n      </Descriptions.Item>\n      <Descriptions.Item label="Value受控">\n        <Text\n          editable={{\n            type: \'number\',\n            value,\n            onChange: v => {\n              setValue(v)\n            },\n          }}\n        >\n          122\n        </Text>\n      </Descriptions.Item>\n      <Descriptions.Item label="Edit状态受控">\n        <Text\n          editable={{\n            type: \'number\',\n            edit,\n            onStateChange: state => {\n              setEdit(state)\n            },\n          }}\n        >\n          122\n        </Text>\n      </Descriptions.Item>\n      <Descriptions.Item label="隐藏OKIcon">\n        <Text\n          editable={{\n            type: \'number\',\n            hidOkIcon: true,\n          }}\n        >\n          122\n        </Text>\n      </Descriptions.Item>\n      <Descriptions.Item label="Disabled">\n        <Text\n          editable={{\n            disabled: true,\n          }}\n        >\n          字符串\n        </Text>\n      </Descriptions.Item>\n      <Descriptions.Item label="Disabled">\n        <Text\n          editable={{\n            edit: true,\n            disabled: true,\n          }}\n        >\n          字符串\n        </Text>\n      </Descriptions.Item>\n      <Descriptions.Item label="OKIcon触发函数">\n        <Text\n          editable={{\n            onOk: v => {\n              return new Promise((s, j) => {\n                window.setTimeout(() => {\n                  s(true)\n                }, 3000)\n              })\n            },\n          }}\n        >\n          字符串\n        </Text>\n      </Descriptions.Item>\n    </Descriptions>\n  )\n}',__scope:(t={props:j,DefaultLayout:d.a,Playground:u.c,Props:u.d,Space:r.default,Button:b.default,Text:l.a,Descriptions:a.default},t.DefaultLayout=d.a,t._frontmatter=p,t),mdxType:"Playground"},(function(){var e=i.useState(3),t=e[0],n=e[1],b=i.useState(!0),r=b[0],d=b[1];return Object(c.b)(a.default,{mdxType:"Descriptions"},Object(c.b)(a.default.Item,{label:"String类型"},Object(c.b)(l.a,{editable:{},mdxType:"Text"},"字符串")),Object(c.b)(a.default.Item,{label:"Number类型"},Object(c.b)(l.a,{editable:{type:"number"},mdxType:"Text"},"122")),Object(c.b)(a.default.Item,{label:"修改Edit图标"},Object(c.b)(l.a,{editable:{type:"number",icon:Object(c.b)("span",null,"Change")},mdxType:"Text"},"122")),Object(c.b)(a.default.Item,{label:"Value受控"},Object(c.b)(l.a,{editable:{type:"number",value:t,onChange:function(e){n(e)}},mdxType:"Text"},"122")),Object(c.b)(a.default.Item,{label:"Edit状态受控"},Object(c.b)(l.a,{editable:{type:"number",edit:r,onStateChange:function(e){d(e)}},mdxType:"Text"},"122")),Object(c.b)(a.default.Item,{label:"隐藏OKIcon"},Object(c.b)(l.a,{editable:{type:"number",hidOkIcon:!0},mdxType:"Text"},"122")),Object(c.b)(a.default.Item,{label:"Disabled"},Object(c.b)(l.a,{editable:{disabled:!0},mdxType:"Text"},"字符串")),Object(c.b)(a.default.Item,{label:"Disabled"},Object(c.b)(l.a,{editable:{edit:!0,disabled:!0},mdxType:"Text"},"字符串")),Object(c.b)(a.default.Item,{label:"OKIcon触发函数"},Object(c.b)(l.a,{editable:{onOk:function(e){return new Promise((function(e,t){window.setTimeout((function(){e(!0)}),3e3)}))}},mdxType:"Text"},"字符串")))})),Object(c.b)("hr",null),Object(c.b)("h2",{id:"api"},"API"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",m({parentName:"tr"},{align:null}),"属性"),Object(c.b)("th",m({parentName:"tr"},{align:null}),"说明"),Object(c.b)("th",m({parentName:"tr"},{align:null}),"类型"),Object(c.b)("th",m({parentName:"tr"},{align:null}),"默认值"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"editable"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"是否可编辑，为对象时可对编辑进行控制"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"EditableConfig"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"children"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"children,在使用 editable 时，相当于 defaultValue"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"string ","|"," number"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"className"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"The computed class name of the Space element"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"string"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")))),Object(c.b)("h2",{id:"editableconfig"},"EditableConfig"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",m({parentName:"tr"},{align:null}),"属性"),Object(c.b)("th",m({parentName:"tr"},{align:null}),"说明"),Object(c.b)("th",m({parentName:"tr"},{align:null}),"类型"),Object(c.b)("th",m({parentName:"tr"},{align:null}),"默认值"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"type"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"类型"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"'string'","|","'number'"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"'string'")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"inputProps"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"对应类型的 input 属性"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"Omit<InputProps, 'value' ","|"," 'onChange' ","|"," 'disabled'",">"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"icon"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"Edit 的 Dom"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"React.ReactElement"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"<Icon type='EditOutlined' /",">")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"disabled"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"禁用"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"boolean"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"defaultEditing"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"编辑状态"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"boolean"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"false")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"edit"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"编辑状态"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"boolean"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"onStateChange"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"触发编辑状态的回调函数"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"(state: boolean) => void"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"value"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"受控 value"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"string","|","number"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"onChange"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"受控 onChange"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"(value: string ","|"," number) => void"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",m({parentName:"tr"},{align:null}),"onOk"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"OKIcon 触发函数"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"((value?: string ","|"," number) => void)","|"," ((value?: string ","|"," number) => Promise<string ","|"," number>);"),Object(c.b)("td",m({parentName:"tr"},{align:null}),"-")))))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"components/text/index.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---components-text-index-mdx-2af58a1c88741f0a2a99.js.map