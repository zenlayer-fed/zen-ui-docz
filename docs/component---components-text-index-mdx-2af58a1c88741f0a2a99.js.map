{"version":3,"sources":["webpack:///../components/text/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Space","Button","Text","Descriptions","React","value","setValue","edit","setEdit","Item","label","editable","type","icon","onChange","v","onStateChange","state","hidOkIcon","disabled","onOk","Promise","s","j","window","setTimeout","isMDXComponent"],"mappings":"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","file":"component---components-text-index-mdx-2af58a1c88741f0a2a99.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zenlayer/Documents/HZ_FE/zen-ui-new/zen-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Space, Button, Text, Descriptions } from '@zenlayer/zen-ui'; // 引入组件\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"text-文本样式\"\n    }}>{`Text 文本样式`}</h1>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`当需要一系列基于文本的基础操作时，如拷贝/省略/可编辑。（目前只做了可编辑）`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [value, setValue] = React.useState(3)\\n  const [edit, setEdit] = React.useState(true)\\n  return (\\n    <Descriptions>\\n      <Descriptions.Item label=\\\"String类型\\\">\\n        <Text editable={{}}>字符串</Text>\\n      </Descriptions.Item>\\n      <Descriptions.Item label=\\\"Number类型\\\">\\n        <Text\\n          editable={{\\n            type: \\'number\\',\\n          }}\\n        >\\n          122\\n        </Text>\\n      </Descriptions.Item>\\n      <Descriptions.Item label=\\\"修改Edit图标\\\">\\n        <Text\\n          editable={{\\n            type: \\'number\\',\\n            icon: <span>Change</span>,\\n          }}\\n        >\\n          122\\n        </Text>\\n      </Descriptions.Item>\\n      <Descriptions.Item label=\\\"Value受控\\\">\\n        <Text\\n          editable={{\\n            type: \\'number\\',\\n            value,\\n            onChange: v => {\\n              setValue(v)\\n            },\\n          }}\\n        >\\n          122\\n        </Text>\\n      </Descriptions.Item>\\n      <Descriptions.Item label=\\\"Edit状态受控\\\">\\n        <Text\\n          editable={{\\n            type: \\'number\\',\\n            edit,\\n            onStateChange: state => {\\n              setEdit(state)\\n            },\\n          }}\\n        >\\n          122\\n        </Text>\\n      </Descriptions.Item>\\n      <Descriptions.Item label=\\\"隐藏OKIcon\\\">\\n        <Text\\n          editable={{\\n            type: \\'number\\',\\n            hidOkIcon: true,\\n          }}\\n        >\\n          122\\n        </Text>\\n      </Descriptions.Item>\\n      <Descriptions.Item label=\\\"Disabled\\\">\\n        <Text\\n          editable={{\\n            disabled: true,\\n          }}\\n        >\\n          字符串\\n        </Text>\\n      </Descriptions.Item>\\n      <Descriptions.Item label=\\\"Disabled\\\">\\n        <Text\\n          editable={{\\n            edit: true,\\n            disabled: true,\\n          }}\\n        >\\n          字符串\\n        </Text>\\n      </Descriptions.Item>\\n      <Descriptions.Item label=\\\"OKIcon触发函数\\\">\\n        <Text\\n          editable={{\\n            onOk: v => {\\n              return new Promise((s, j) => {\\n                window.setTimeout(() => {\\n                  s(true)\\n                }, 3000)\\n              })\\n            },\\n          }}\\n        >\\n          字符串\\n        </Text>\\n      </Descriptions.Item>\\n    </Descriptions>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Space,\n      Button,\n      Text,\n      Descriptions,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = React.useState(3);\n        const [edit, setEdit] = React.useState(true);\n        return <Descriptions mdxType=\"Descriptions\">\n        <Descriptions.Item label=\"String类型\">\n          <Text editable={{}} mdxType=\"Text\">字符串</Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Number类型\">\n          <Text editable={{\n              type: 'number'\n            }} mdxType=\"Text\">\n            122\n          </Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"修改Edit图标\">\n          <Text editable={{\n              type: 'number',\n              icon: <span>Change</span>\n            }} mdxType=\"Text\">\n            122\n          </Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Value受控\">\n          <Text editable={{\n              type: 'number',\n              value,\n              onChange: v => {\n                setValue(v);\n              }\n            }} mdxType=\"Text\">\n            122\n          </Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Edit状态受控\">\n          <Text editable={{\n              type: 'number',\n              edit,\n              onStateChange: state => {\n                setEdit(state);\n              }\n            }} mdxType=\"Text\">\n            122\n          </Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"隐藏OKIcon\">\n          <Text editable={{\n              type: 'number',\n              hidOkIcon: true\n            }} mdxType=\"Text\">\n            122\n          </Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Disabled\">\n          <Text editable={{\n              disabled: true\n            }} mdxType=\"Text\">\n            字符串\n          </Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Disabled\">\n          <Text editable={{\n              edit: true,\n              disabled: true\n            }} mdxType=\"Text\">\n            字符串\n          </Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"OKIcon触发函数\">\n          <Text editable={{\n              onOk: v => {\n                return new Promise((s, j) => {\n                  window.setTimeout(() => {\n                    s(true);\n                  }, 3000);\n                });\n              }\n            }} mdxType=\"Text\">\n            字符串\n          </Text>\n        </Descriptions.Item>\n      </Descriptions>;\n      }}\n    </Playground>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`editable`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否可编辑，为对象时可对编辑进行控制`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`EditableConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`children,在使用 editable 时，相当于 defaultValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string `}{`|`}{` number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The computed class name of the Space element`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"editableconfig\"\n    }}>{`EditableConfig`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'string'`}{`|`}{`'number'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'string'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`inputProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对应类型的 input 属性`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Omit<InputProps, 'value' `}{`|`}{` 'onChange' `}{`|`}{` 'disabled'`}{`>`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`icon`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Edit 的 Dom`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactElement`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`<Icon type='EditOutlined' /`}{`>`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`禁用`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultEditing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`编辑状态`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`edit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`编辑状态`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onStateChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`触发编辑状态的回调函数`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(state: boolean) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`受控 value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}{`|`}{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`受控 onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(value: string `}{`|`}{` number) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onOk`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`OKIcon 触发函数`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`((value?: string `}{`|`}{` number) => void)`}{`|`}{` ((value?: string `}{`|`}{` number) => Promise<string `}{`|`}{` number>);`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}